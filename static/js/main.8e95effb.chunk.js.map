{"version":3,"sources":["components/MovieItem.js","components/MovieList.js","redux/moviesSlice.js","pages/HomePage.js","pages/AddEditMoviePage.js","pages/MovieDetailsPage.js","app.js","redux/store.js","index.js"],"names":["MovieItem","_ref","movie","_jsxs","className","children","_jsx","title","genre","releaseYear","watched","Link","to","concat","id","MovieList","movies","map","moviesSlice","createSlice","name","initialState","reducers","setMovies","state","action","payload","addMovie","push","editMovie","index","findIndex","deleteMovie","filter","toggleWatchStatus","find","rateMovie","rating","reviewMovie","review","actions","HomePage","dispatch","useDispatch","useSelector","useEffect","fetch","then","response","json","data","AddEditMoviePage","setTitle","useState","description","setDescription","setReleaseYear","setGenre","history","useHistory","useParams","onSubmit","e","preventDefault","Date","now","toString","type","value","onChange","target","required","onClick","MovieDetailsPage","handleToggleWatchStatus","handleDelete","handleRateMovie","Number","star","handleReviewMovie","App","Router","Switch","Route","path","exact","component","configureStore","reducer","moviesReducer","ReactDOM","render","Provider","store","document","getElementById"],"mappings":"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","file":"static/js/main.8e95effb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MovieItem = ({ movie }) => {\r\n  return (\r\n    <div className=\"movie-item\">\r\n      <h2>{movie.title}</h2>\r\n      <p><strong>Genre:</strong> {movie.genre}</p>\r\n      <p><strong>Release Year:</strong> {movie.releaseYear}</p>\r\n      <p><strong>Status:</strong> {movie.watched ? 'Watched' : 'Unwatched'}</p>\r\n      <Link to={`/details/${movie.id}`}>View Details</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieItem;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MovieItem from './MovieItem';\r\n\r\nconst MovieList = ({ movies }) => {\r\n  return (\r\n    <div className=\"movie-list\">\r\n      {movies.map(movie => (\r\n        <MovieItem key={movie.id} movie={movie} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  movies: [],\r\n};\r\n\r\nconst moviesSlice = createSlice({\r\n  name: 'movies',\r\n  initialState,\r\n  reducers: {\r\n    setMovies: (state, action) => {\r\n      state.movies = action.payload;\r\n    },\r\n    addMovie: (state, action) => {\r\n      state.movies.push(action.payload);\r\n    },\r\n    editMovie: (state, action) => {\r\n      const index = state.movies.findIndex(movie => movie.id === action.payload.id);\r\n      if (index !== -1) {\r\n        state.movies[index] = action.payload;\r\n      }\r\n    },\r\n    deleteMovie: (state, action) => {\r\n      state.movies = state.movies.filter(movie => movie.id !== action.payload);\r\n    },\r\n    toggleWatchStatus: (state, action) => {\r\n      const movie = state.movies.find(movie => movie.id === action.payload);\r\n      if (movie) {\r\n        movie.watched = !movie.watched;\r\n      }\r\n    },\r\n    rateMovie: (state, action) => {\r\n      const { id, rating } = action.payload;\r\n      const movie = state.movies.find(movie => movie.id === id);\r\n      if (movie) {\r\n        movie.rating = rating;\r\n      }\r\n    },\r\n    reviewMovie: (state, action) => {\r\n      const { id, review } = action.payload;\r\n      const movie = state.movies.find(movie => movie.id === id);\r\n      if (movie) {\r\n        movie.review = review;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setMovies, addMovie, editMovie, deleteMovie, toggleWatchStatus, rateMovie, reviewMovie } = moviesSlice.actions;\r\nexport default moviesSlice.reducer;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport MovieList from '../components/MovieList';\r\nimport { Link } from 'react-router-dom';\r\nimport { setMovies } from '../redux/moviesSlice';\r\n\r\nconst HomePage = () => {\r\n  const dispatch = useDispatch();\r\n  const movies = useSelector(state => state.movies.movies);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/movies')\r\n      .then(response => response.json())\r\n      .then(data => dispatch(setMovies(data)));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header>\r\n        <h1>My Movie Watchlist</h1>\r\n        <Link to=\"/add\">Add New Movie</Link>\r\n      </header>\r\n      <MovieList movies={movies} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addMovie, editMovie } from '../redux/moviesSlice';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nconst AddEditMoviePage = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [releaseYear, setReleaseYear] = useState('');\r\n  const [genre, setGenre] = useState('');\r\n  const movies = useSelector(state => state.movies.movies);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const movie = movies.find(movie => movie.id === id);\r\n      if (movie) {\r\n        setTitle(movie.title);\r\n        setDescription(movie.description);\r\n        setReleaseYear(movie.releaseYear);\r\n        setGenre(movie.genre);\r\n      }\r\n    }\r\n  }, [id, movies]);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const movie = { id: id || Date.now().toString(), title, description, releaseYear, genre };\r\n\r\n    if (id) {\r\n      dispatch(editMovie(movie));\r\n    } else {\r\n      dispatch(addMovie(movie));\r\n    }\r\n\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>{id ? 'Edit Movie' : 'Add Movie'}</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Title</label>\r\n          <input type=\"text\" value={title} onChange={e => setTitle(e.target.value)} required />\r\n        </div>\r\n        <div>\r\n          <label>Description</label>\r\n          <textarea value={description} onChange={e => setDescription(e.target.value)}></textarea>\r\n        </div>\r\n        <div>\r\n          <label>Release Year</label>\r\n          <input type=\"number\" value={releaseYear} onChange={e => setReleaseYear(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>Genre</label>\r\n          <input type=\"text\" value={genre} onChange={e => setGenre(e.target.value)} />\r\n        </div>\r\n        <button type=\"submit\">Save</button>\r\n        <button type=\"button\" className=\"cancel-button\" onClick={() => history.push('/')}>Cancel</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddEditMoviePage;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { deleteMovie, toggleWatchStatus, rateMovie, reviewMovie } from '../redux/moviesSlice';\r\n\r\nconst MovieDetailsPage = () => {\r\n  const { id } = useParams();\r\n  const movie = useSelector(state => state.movies.movies.find(movie => movie.id === id));\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleDelete = () => {\r\n    dispatch(deleteMovie(id));\r\n    history.push('/');\r\n  };\r\n\r\n  const handleToggleWatchStatus = () => {\r\n    dispatch(toggleWatchStatus(id));\r\n  };\r\n\r\n  const handleRateMovie = rating => {\r\n    dispatch(rateMovie({ id, rating }));\r\n  };\r\n\r\n  const handleReviewMovie = review => {\r\n    dispatch(reviewMovie({ id, review }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!movie) {\r\n      history.push('/');\r\n    }\r\n  }, [movie, history]);\r\n\r\n  if (!movie) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container details-page\">\r\n      <h1>{movie.title}</h1>\r\n      <p><strong>Description:</strong> {movie.description}</p>\r\n      <p><strong>Release Year:</strong> {movie.releaseYear}</p>\r\n      <p><strong>Genre:</strong> {movie.genre}</p>\r\n      <p><strong>Status:</strong> {movie.watched ? 'Watched' : 'Unwatched'}</p>\r\n      <button onClick={handleToggleWatchStatus}>{movie.watched ? 'Mark as Unwatched' : 'Mark as Watched'}</button>\r\n      <button onClick={() => history.push(`/edit/${id}`)}>Edit</button>\r\n      <button onClick={handleDelete} className=\"cancel-button\">Delete</button>\r\n\r\n      <div className=\"rating\">\r\n        <h2>Rate this movie</h2>\r\n        <select value={movie.rating} onChange={e => handleRateMovie(Number(e.target.value))}>\r\n          {[1, 2, 3, 4, 5].map(star => (\r\n            <option key={star} value={star}>{star} Star{star > 1 && 's'}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"review\">\r\n        <h2>Review this movie</h2>\r\n        <textarea value={movie.review} onChange={e => handleReviewMovie(e.target.value)}></textarea>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetailsPage;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport HomePage from './pages/HomePage';\r\nimport AddEditMoviePage from './pages/AddEditMoviePage';\r\nimport MovieDetailsPage from './pages/MovieDetailsPage';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={HomePage} />\r\n        <Route path=\"/add\" component={AddEditMoviePage} />\r\n        <Route path=\"/edit/:id\" component={AddEditMoviePage} />\r\n        <Route path=\"/details/:id\" component={MovieDetailsPage} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport moviesReducer from './moviesSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    movies: moviesReducer,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}